version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: hono-skeleton-postgres
    environment:
      POSTGRES_DB: hono_skeleton
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hono-skeleton-network

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: hono-skeleton-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hono-skeleton-network

  # Hono Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: hono-skeleton-app
    environment:
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/hono_skeleton
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production-docker
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173
      CORS_CREDENTIALS: "true"
      SWAGGER_ENABLED: "true"
      API_TITLE: Hono Skeleton API
      API_VERSION: 1.0.0
      API_DESCRIPTION: Production-ready Hono.js backend with Clean Architecture
      LOG_LEVEL: info
      LOG_PRETTY: "false"
      BCRYPT_ROUNDS: 12
      PASSWORD_MIN_LENGTH: 8
      MAX_FILE_SIZE: 10485760
    ports:
      - "3000:3000"
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - hono-skeleton-network

  # Database Migration Service (runs once)
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    container_name: hono-skeleton-migrate
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/hono_skeleton
    command: ["bun", "run", "db:migrate"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hono-skeleton-network
    profiles:
      - migration

  # Database Seeding Service (optional)
  seed:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    container_name: hono-skeleton-seed
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/hono_skeleton
    command: ["bun", "run", "db:seed"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hono-skeleton-network
    profiles:
      - seeding

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local

networks:
  hono-skeleton-network:
    driver: bridge