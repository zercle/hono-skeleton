import { injectable, inject } from 'tsyringe';
import { IGreetingUseCase } from './interfaces/greeting.usecase.interface';
import { IGreetingRepository } from '../repository/interfaces/greeting.repository.interface';
import { Greeting } from '../models/greeting.model';

@injectable()
export class GreetingUseCase implements IGreetingUseCase {
  constructor(@inject('IGreetingRepository') private greetingRepository: IGreetingRepository) {}

  async getGreeting(): Promise<Greeting> {
    // In a real application, this might fetch a specific greeting or the latest one
    const greetings = await this.greetingRepository.findAll();
    return greetings[0]; // Return the first greeting for simplicity
  }

  async createGreeting(message: string): Promise<Greeting> {
    const newGreeting: Greeting = {
      id: '', // ID will be generated by the repository
      message,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    return this.greetingRepository.create(newGreeting);
  }
}
